@page "/polls/{id:int}/vote"

@attribute [Authorize]

@using Microsoft.AspNetCore.Authorization
@using Tally.Web.Models
@model Tally.Web.Pages.Polls.Vote

@{
    ViewData["Title"] = "Vote";

    var colors = new Dictionary<PollChannel, string>
    {
        [PollChannel.Telegram] = "#229ED9",
        [PollChannel.Twitter] = "#1DA1F2",
        [PollChannel.GitHub] = "#171515",
        [PollChannel.Discord] = "#5865F2",
    };
}

<h1>@ViewData["Title"]</h1>

@if (Model.Poll.EndedAt is not null)
{
    <h3>Sorry, this poll has concluded.</h3>
}
else if (Model.Poll.ChannelPolls.All(cp => cp.Channel != PollChannel.Web))
{
    <h3 class="text-center mb-3">Sorry, this poll is not viewable on the web.</h3>

    <p class="lead text-center mb-3">It is, however, available on this channels:</p>
}
else
{
    <h3 class="text-center mb-3">@Model.Poll.Question</h3>

    <p class="text-center lead mb-3">Select one of the options below to vote:</p>

    @* <div class="d-flex flex-column mb-3 align-items-center w-50" x-data="vote"> *@
    <div class="d-grid gap-2 mb-4" x-data="vote">
        @for (var i = 0; i < Model.Poll.Options.Count; i++)
        {
            var option = Model.Poll.Options[i];

            <template x-if="viewResults || chosen != null">
                <button class="btn btn-outline-info p-0" disabled="disabled">
                    <div class="progress" style="height: 2.2rem">
                        <div class="progress-bar bg-info fs-6" role="progressbar" :style="{ width: `${results[@i]}%` }"
                             :aria-valuenow="results[@i]" aria-valuemin="0" aria-valuemax="100" x-text="`${results[@i]}%`">
                        </div>
                    </div>
                </button>
            </template>

            <template x-if="!viewResults && chosen == null">
                <button class="btn btn-outline-info" @@click="vote(@option.Id)" :disabled="chosen !== null">
                    <span>@option.Text</span>
                </button>
            </template>
        }

        <template x-if="chosen !== null">
            <button class="btn btn-outline-warning" @@click="retract" :disabled="chosen === null">
                <i class="bi bi-arrow-counterclockwise me-2"></i>
                Retract vote
            </button>
        </template>

        <template x-if="chosen === null && !viewResults">
            <button class="btn btn-outline-info" @@click="viewResults = true" :disabled="viewResults || chosen !== null">
                <span>
                    <i class="bi bi-bar-chart-line-fill me-2"></i>
                    View results
                </span>
            </button>
        </template>

        <template x-if="chosen === null && viewResults">
            <button class="btn btn-outline-info" @@click="viewResults = false" :disabled="!viewResults && chosen === null">
                <span>
                    <i class="bi bi-list-ol me-2"></i>
                    View options
                </span>
            </button>
        </template>
    </div>

    <p class="lead text-center mb-3">View this poll also on:</p>
}

<div class="d-flex justify-content-center">
    @foreach (var channelPoll in Model.Poll.ChannelPolls)
    {
        @if (channelPoll.Channel == PollChannel.Web)
        {
            continue;
        }

        <a href="#" class="fs-1 mx-2" style="color: @colors[channelPoll.Channel]">
            <i class="bi bi-@channelPoll.Channel.ToString().ToLower()"></i>
        </a>
    }
</div>

@section Scripts {
    <script>    
        const pollId = @Model.Poll.Id;
        const chosen = @Json.Serialize(Model.Chosen);
        const ongoing = @Json.Serialize(Model.Poll.EndedAt == null);
        const initialResults = @Json.Serialize(Model.Results);
    </script>
    <script src="~/js/polls/vote.g.js"></script>
}